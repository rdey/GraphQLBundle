imports:
    - { resource: ../config.yml }

framework:
    annotations: true
    validation:
        enabled: true
        enable_annotations: true

redeye_graphql:
    definitions:
        config_validation: false
        class_namespace: "Redeye\\GraphQLBundle\\Validator\\__DEFINITIONS__"
        schema:
            query: Mutation
            mutation: Mutation
        mappings:
            types:
                - type: yaml
                  dir: "%kernel.project_dir%/config/validator/mapping"

services:
    validator.expression:
        class: Redeye\GraphQLBundle\Validator\Constraints\ExpressionValidator
        arguments:
            - '@Redeye\GraphQLBundle\ExpressionLanguage\ExpressionLanguage'
            - '@Redeye\GraphQLBundle\Definition\GraphQLServices'
        tags:
            - name: validator.constraint_validator
              alias: validator.expression

    Redeye\GraphQLBundle\Tests\Functional\Validator\ServiceValidator:
        tags:
            # TODO: replace the tag with 'redeye_graphql.service' in 1.0
            - { name: redeye_graphql.global_variable, alias: service_validator }

    Redeye\GraphQLBundle\Tests\Functional\App\Mutation\InputValidatorMutation:
        tags:
            - { name: "redeye_graphql.mutation", alias: "mutation_mock", method: "mutationMock" }
            - { name: "redeye_graphql.mutation", alias: "mutation_errors", method: "mutationErrors" }
            - { name: "redeye_graphql.mutation", alias: "no_validation", method: "noValidation" }

